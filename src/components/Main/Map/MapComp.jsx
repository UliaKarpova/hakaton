import './MapComp.css';
import { useState } from 'react';
import geoConventor from '../../../utils/geoConvertor';
import {
  Map,
  ZoomControl,
  Button,
  ObjectManager,
  GeoObject,
  Clusterer,
  Placemark,
  Polygon,
  useYMaps
} from '@pbe/react-yandex-maps';

const MapComp = () => {
  const [buttonIsActive, setButtonIsActive] = useState(false);

  const ymaps = useYMaps();


  // Параметры отображения карты
  const mapDefaultState = {
    center: [55.751574, 37.573856],
    zoom: 11,
    controls: [],
  };


  // *** Тестовый полигон ***
  // Координаты точек полигона
  const geometry = [[ [55.75, 37.50], [55.75, 37.71], [55.70, 37.70] ]]
  // Опции отрисовки полигона
  const options = {
    fillColor: "#00FF00",
    strokeColor: "#0000FF",
    opacity: 0.5,
    strokeWidth: 5,
    strokeStyle: "shortdash",
  }


  const polygones = [
    {
      id: 1,
      geometry: [[[55.76520584626,37.67484422515876],[55.763802507891775,37.674114664306686],[55.763149212383105,37.67990823577886],[55.76445579240805,37.68025155853278],[55.76520584626,37.67484422515876]]]
    },
    {
      id: 2,
      geometry: [[[55.768762355967326,37.691795786132865],[55.76668171636851,37.69634481262212],[55.76370572406559,37.69565816711431],[55.76160061615654,37.691409548034734],[55.7633427825687,37.68591638397221],[55.766076858355156,37.68887754272467],[55.768762355967326,37.691795786132865]]]
    },
  ]

  //Отрисовка объекта полигонов
  const myPolygon = (data) => {
    return data.map(item => (<Polygon key={Math.random()} geometry={item.geometry} options={options} />))
  }

  // *** Отрисовка произвольной области ***

// const dataPoliygon = [
//   { id: 1,
//     coordinates: [[[4213.45998758,19993.33003554],[4226.40018758,19931.89023555],[4299.58998756,19951.07023555],[4293.74018756,19976.14023554],[4285.02018756,20009.98023553],[4213.45998758,19993.33003554]]]
//   },
//   { id: 2,
//     coordinates: [[[6910.64578691,14734.45043686],[6933.6099869,14735.29003686],[6971.72018689,14736.94863686],[6969.52538689,14781.35603684],[6908.14178691,14778.66423685],[6910.64578691,14734.45043686]]]},
//   { id: 3,
//     coordinates: [[[11645.03178572,24139.3492345],[11672.92998571,24129.1200345],[11718.4499857,24117.5100345],[11726.3199857,24135.8900345],[11747.68998569,24189.63003448],[11692.53998571,24208.72003448],[11689.09998571,24201.25003448],[11682.66998571,24204.06003448],[11675.48998571,24186.29003448],[11660.18998571,24192.51003448],[11657.85998571,24186.70003448],[11646.94338572,24162.06043449],[11652.97238571,24159.22203449],[11645.03178572,24139.3492345]]]},
//   {id: 4,
//     coordinates: [[[11203.05798583,23202.99803473],[11218.95198582,23223.00203473],[11208.96798583,23232.99803472],[11265.04998581,23289.99803471],[11267.93598581,23288.00003471],[11278.05198581,23301.99803471],[11249.94198582,23330.0000347],[11249.02398582,23337.0020347],[11239.04598582,23330.0000347],[11228.01198582,23322.0020347],[11211.99198583,23304.00203471],[11187.03798583,23273.00003471],[11159.98398584,23238.99803472],[11203.05798583,23202.99803473]]]},
//   {id: 5,
//     coordinates: [[[11203.05798583,23202.99803473],[11159.98398584,23238.99803472],[11158.00998584,23235.99803472],[11151.96798584,23229.00203472],[11146.98198584,23223.00203473],[11143.95798584,23217.99803473],[11119.00398585,23187.00203473],[11101.01598585,23163.99803474],[11094.04998585,23153.00003474],[11092.99998586,23151.99803474],[11088.01398586,23142.99803475],[11086.03998586,23139.00203475],[11089.98198586,23138.00003475],[11104.03398585,23133.99803475],[11136.99798584,23124.00203475],[11203.05798583,23202.99803473]]]},
//   ]

//   const newPolygonData = (data) => {
//     const newData =  data.map(item => {
//       const q = item.coordinates[0].map(el => 
//         geoConventor(el)
//       );
//       return [q];
//     })
//     return newData
//   }


//   const aaa = newPolygonData(dataPoliygon)
//   console.log(aaa)

//  //Отрисовка объекта полигонов
//  const myPolygon = (data) => {
//   return data.map(item => (<Polygon  geometry={item} options={options} />))
// }


  return (
    <div className="map-comp">
      <Map defaultState={mapDefaultState} width="100%" height="100%">
        <ZoomControl options={{ float: 'right' }} />
        <Button
          onClick={() => setButtonIsActive(!buttonIsActive)}
          options={{ maxWidth: 200 }}
          data={{ content: 'Выделить область' }}
          defaultState={{ selected: buttonIsActive }}
        />
        {myPolygon(polygones)}
      </Map>
    </div>
  );
};

export default MapComp;
